package com.app.hibnate;
// Generated Apr 16, 2016 3:28:26 PM by Hibernate Tools 4.3.1.Final

import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Lob;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.web.multipart.MultipartFile;

/**
 * Register generated by hbm2java
 */
@Entity
@Table(name = "register", catalog = "mywyc", uniqueConstraints={@UniqueConstraint(columnNames = "RegisterName")})
public class Register implements java.io.Serializable {
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "RegisterId", unique = true, nullable = false)
	private Integer registerId;
	
	@NotEmpty
	@Column(name = "RegisterName", unique = true, length = 45)
	private String registerName;
	
	@NotEmpty
	@Column(name = "RegisterPassword", length = 45)
	private String registerPassword;
	
	@NotEmpty
	@Column(name = "ConfirmPassword", length = 45)
	private String confirmPassword;
	
	@NotEmpty
	@Column(name = "RegisterPhone")
	private String registerPhone;
	
	@NotEmpty
	@Column(name = "RegisterEmail", length = 45)
	private String registerEmail;
	
	@Transient
	private MultipartFile photo;
	
	@Column(name = "RegisterPhotoName")
	private String registerPhotoName;
	
	@Column(name = "RegisterPhotoFiletye")
	private String registerPhotoFiletye;
	
	@Column(name = "authority")
	private String authority = "user";
	
	@Column(name = "RegisterPhotoData")
	@Lob private byte[] registerPhotoData;
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "register")
	private Set<Item> items = new HashSet<Item>(0);

	public Register() {
	}

	public Register(String registerName, String registerPassword, String confirmPassword, String registerPhone, String registerEmail, String authority,
			Set<Item> items) {
		this.registerName = registerName;
		this.registerPassword = registerPassword;
		this.setConfirmPassword(confirmPassword);
		this.registerPhone = registerPhone;
		this.registerEmail = registerEmail;
		this.items = items;
		this.authority = "user";
	}

	public Integer getRegisterId() {
		return this.registerId;
	}

	public void setRegisterId(Integer registerId) {
		this.registerId = registerId;
	}

	public String getRegisterName() {
		return this.registerName;
	}

	public void setRegisterName(String registerName) {
		this.registerName = registerName;
	}

	public String getRegisterPassword() {
		return this.registerPassword;
	}

	public void setRegisterPassword(String registerPassword) {
		this.registerPassword = registerPassword;
	}

	public String getRegisterPhone() {
		return this.registerPhone;
	}

	public void setRegisterPhone(String registerPhone) {
		this.registerPhone = registerPhone;
	}

	public String getRegisterEmail() {
		return this.registerEmail;
	}

	public void setRegisterEmail(String registerEmail) {
		this.registerEmail = registerEmail;
	}

	public Set<Item> getItems() {
		return this.items;
	}

	public void setItems(Set<Item> items) {
		this.items = items;
	}

	public String getRegisterPhotoName() {
		return registerPhotoName;
	}

	public void setRegisterPhotoName(String registerPhotoName) {
		this.registerPhotoName = registerPhotoName;
	}

	public String getRegisterPhotoFiletye() {
		return registerPhotoFiletye;
	}

	public void setRegisterPhotoFiletye(String registerPhotoFiletye) {
		this.registerPhotoFiletye = registerPhotoFiletye;
	}

	public byte[] getRegisterPhotoData() {
		return registerPhotoData;
	}

	public void setRegisterPhotoData(byte[] registerPhotoData) {
		this.registerPhotoData = registerPhotoData;
	}

	public MultipartFile getPhoto() {
		return photo;
	}

	public void setPhoto(MultipartFile photo) {
		this.photo = photo;
		
		setRegisterPhotoName(photo.getOriginalFilename());
		setRegisterPhotoFiletye(photo.getContentType());
		try {
			setRegisterPhotoData(photo.getBytes());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public String getConfirmPassword() {
		return confirmPassword;
	}

	public void setConfirmPassword(String confirmPassword) {
		this.confirmPassword = confirmPassword;
	}

	public String getAuthority() {
		return authority;
	}

	public void setAuthority(String authority) {
		this.authority = authority;
	}

}
