package com.app.hibnate;
// Generated Apr 16, 2016 3:28:26 PM by Hibernate Tools 4.3.1.Final

import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.web.multipart.MultipartFile;

/**
 * Item generated by hbm2java
 */
@Entity
@Table(name = "item", catalog = "mywyc")
public class Item implements java.io.Serializable {
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ItemId", unique = true, nullable = false)
	private Integer itemId;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CategoryId")
	private Category category;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RecommondationId")
	private Recom recommendation;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RegisterId")
	private Register register;
	
	@NotEmpty
	@Column(name = "ItemName", length = 45)
	private String itemName;
	
	@Transient
	private MultipartFile image;
	
	@Column(name = "ItemImageName")
	private String itemImageName;
	
	@Column(name = "ItemImageFiletye")
	private String itemImageFiletye;
	
	@Column(name = "ItemData")
	@Lob private byte[] itemData;
	
	@Column(name = "ItemLike")
	private Integer itemLike;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "item")
	private Set<Step> steps = new HashSet<Step>(0);

	public Item() {
	}

	public Item(Category category, Recom recommendation, Register register, String itemName,
			String itemImageName, String itemImageFiletye, byte[] itemData, Integer itemLike, Set<Step> steps) {
		this.category = category;
		this.recommendation = recommendation;
		this.register = register;
		this.itemName = itemName;
		this.itemImageName = itemImageName;
		this.itemImageFiletye = itemImageFiletye;
		this.itemData = itemData;
		this.itemLike = itemLike;
		this.steps = steps;
	}

	public Integer getItemId() {
		return this.itemId;
	}

	public void setItemId(Integer itemId) {
		this.itemId = itemId;
	}

	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	public Recom getRecommendation() {
		return this.recommendation;
	}

	public void setRecommendation(Recom recommendation) {
		this.recommendation = recommendation;
	}

	public Register getRegister() {
		return this.register;
	}

	public void setRegister(Register register) {
		this.register = register;
	}

	public String getItemName() {
		return this.itemName;
	}

	public void setItemName(String itemName) {
		this.itemName = itemName;
	}

	public String getItemImageName() {
		return this.itemImageName;
	}

	public void setItemImageName(String itemImageName) {
		this.itemImageName = itemImageName;
	}

	public String getItemImageFiletye() {
		return this.itemImageFiletye;
	}

	public void setItemImageFiletye(String itemImageFiletye) {
		this.itemImageFiletye = itemImageFiletye;
	}

	public byte[] getItemData() {
		return this.itemData;
	}

	public void setItemData(byte[] itemData) {
		this.itemData = itemData;
	}

	public Integer getItemLike() {
		return this.itemLike;
	}

	public void setItemLike(Integer itemLike) {
		this.itemLike = itemLike;
	}

	public Set<Step> getSteps() {
		return this.steps;
	}

	public void setSteps(Set<Step> steps) {
		this.steps = steps;
	}

	public MultipartFile getImage() {
		return image;
	}

	public void setImage(MultipartFile image) {
		this.image = image;
		
		setItemImageName(image.getOriginalFilename());
		setItemImageFiletye(image.getContentType());
		try {
			setItemData(image.getBytes());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

}
